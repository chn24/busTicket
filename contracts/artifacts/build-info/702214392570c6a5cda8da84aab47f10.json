{
	"id": "702214392570c6a5cda8da84aab47f10",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Storage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.2 <0.9.0;\n\n/**\n * @title Storage\n * @dev Store & retrieve value in a variable\n * @custom:dev-run-script ./scripts/deploy_with_ethers.ts\n */\ncontract Storage {\n\n    modifier notHaveAccount() {\n        require(hasAccount[msg.sender] == false);\n        _;\n    }\n\n    modifier haveAccount() {\n        require(hasAccount[msg.sender] == true);\n        _;\n    }\n\n    struct Ticket {\n        string name;\n        uint16 count;\n    }\n\n    mapping(address => bool) hasAccount;\n    mapping(address => Ticket) TicketOwner;\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Storage.sol": {
				"Storage": {
					"abi": [],
					"devdoc": {
						"custom:dev-run-script": "./scripts/deploy_with_ethers.ts",
						"details": "Store & retrieve value in a variable",
						"kind": "dev",
						"methods": {},
						"title": "Storage",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Storage.sol\":199:572  contract Storage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Storage.sol\":199:572  contract Storage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cd2708bb9b9fb331a26bf8c73e115867a4689d48909e4ab7a55676997c65528d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220cd2708bb9b9fb331a26bf8c73e115867a4689d48909e4ab7a55676997c65528d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0x27 ADDMOD 0xBB SWAP12 SWAP16 0xB3 BALANCE LOG2 PUSH12 0xF8C73E115867A4689D48909E 0x4A 0xB7 0xA5 JUMP PUSH23 0x997C65528D64736F6C6343000812003300000000000000 ",
							"sourceMap": "199:373:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220cd2708bb9b9fb331a26bf8c73e115867a4689d48909e4ab7a55676997c65528d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0x27 ADDMOD 0xBB SWAP12 SWAP16 0xB3 BALANCE LOG2 PUSH12 0xF8C73E115867A4689D48909E 0x4A 0xB7 0xA5 JUMP PUSH23 0x997C65528D64736F6C6343000812003300000000000000 ",
							"sourceMap": "199:373:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 199,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 199,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 199,
									"end": 572,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 572,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 572,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 572,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 199,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 572,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 199,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 572,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 572,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 199,
									"end": 572,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 572,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 199,
									"end": 572,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 199,
									"end": 572,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 572,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 572,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 572,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 199,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 572,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd2708bb9b9fb331a26bf8c73e115867a4689d48909e4ab7a55676997c65528d64736f6c63430008120033",
									".code": [
										{
											"begin": 199,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 199,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 199,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 572,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:dev-run-script\":\"./scripts/deploy_with_ethers.ts\",\"details\":\"Store & retrieve value in a variable\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Storage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Storage.sol\":\"Storage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Storage.sol\":{\"keccak256\":\"0xce0afa165192370927939d36310b964c389fe3d7a48a50e30d8f96ce0389b82c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bdf97c3c72f5cb22ae23ca9a59a2309137004cb55a68c3b8fed7369fc8a2e227\",\"dweb:/ipfs/QmXsDctXMKVrpfq4UbvJbnWygHksCLMehiQq4XqnnA16Wd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 37,
								"contract": "contracts/Storage.sol:Storage",
								"label": "hasAccount",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 42,
								"contract": "contracts/Storage.sol:Storage",
								"label": "TicketOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Ticket)33_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(Ticket)33_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Storage.Ticket)",
								"numberOfBytes": "32",
								"value": "t_struct(Ticket)33_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Ticket)33_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Ticket",
								"members": [
									{
										"astId": 30,
										"contract": "contracts/Storage.sol:Storage",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 32,
										"contract": "contracts/Storage.sol:Storage",
										"label": "count",
										"offset": 0,
										"slot": "1",
										"type": "t_uint16"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Storage.sol": {
				"ast": {
					"absolutePath": "contracts/Storage.sol",
					"exportedSymbols": {
						"Storage": [
							43
						]
					},
					"id": 44,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Storage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "70:128:0",
								"text": " @title Storage\n @dev Store & retrieve value in a variable\n @custom:dev-run-script ./scripts/deploy_with_ethers.ts"
							},
							"fullyImplemented": true,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "Storage",
							"nameLocation": "208:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "249:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 5,
																	"name": "hasAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "267:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 8,
																"indexExpression": {
																	"expression": {
																		"id": 6,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "278:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 7,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "282:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "278:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "267:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 9,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "293:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "267:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 4,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "259:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "259:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "259:40:0"
											},
											{
												"id": 13,
												"nodeType": "PlaceholderStatement",
												"src": "309:1:0"
											}
										]
									},
									"id": 15,
									"name": "notHaveAccount",
									"nameLocation": "232:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:2:0"
									},
									"src": "223:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "346:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 18,
																	"name": "hasAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "364:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 21,
																"indexExpression": {
																	"expression": {
																		"id": 19,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "375:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "379:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "375:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "364:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "390:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "364:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "356:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "356:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "356:39:0"
											},
											{
												"id": 26,
												"nodeType": "PlaceholderStatement",
												"src": "405:1:0"
											}
										]
									},
									"id": 28,
									"name": "haveAccount",
									"nameLocation": "332:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "343:2:0"
									},
									"src": "323:90:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "Storage.Ticket",
									"id": 33,
									"members": [
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "450:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 33,
											"src": "443:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 29,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "443:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "count",
											"nameLocation": "471:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 33,
											"src": "464:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 31,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "464:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Ticket",
									"nameLocation": "426:6:0",
									"nodeType": "StructDefinition",
									"scope": 43,
									"src": "419:64:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "hasAccount",
									"nameLocation": "514:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 43,
									"src": "489:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 36,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "497:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "489:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 35,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "508:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "TicketOwner",
									"nameLocation": "557:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 43,
									"src": "530:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$33_storage_$",
										"typeString": "mapping(address => struct Storage.Ticket)"
									},
									"typeName": {
										"id": 41,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "538:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "530:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Ticket_$33_storage_$",
											"typeString": "mapping(address => struct Storage.Ticket)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 40,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 39,
												"name": "Ticket",
												"nameLocations": [
													"549:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 33,
												"src": "549:6:0"
											},
											"referencedDeclaration": 33,
											"src": "549:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Ticket_$33_storage_ptr",
												"typeString": "struct Storage.Ticket"
											}
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 44,
							"src": "199:373:0",
							"usedErrors": []
						}
					],
					"src": "37:535:0"
				},
				"id": 0
			}
		}
	}
}